/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ButtonSize, ButtonVariant, ImagePosition } from "./components/datacom-button/datacom-button";
import { RadioSize, RadioVariant } from "./components/datacom-radio/datacom-radio";
export namespace Components {
    interface DatacomButton {
        "autofocus": boolean;
        "disabled": boolean;
        "form": string;
        "formaction": string;
        "formenctype": string;
        "formmethod": string;
        "formtarget": string;
        "icon": string;
        "imagePosition": ImagePosition;
        "loading": boolean;
        "name": string;
        "size": ButtonSize;
        "src": string;
        "text": string;
        "type": string;
        "value": string;
        "variant": ButtonVariant;
    }
    interface DatacomCheckbox {
        "checked": boolean;
        "label": string;
    }
    interface DatacomMenubar {
    }
    interface DatacomRadio {
        "autofocus": boolean;
        "checked": boolean;
        "disabled": boolean;
        "label": string;
        "required": boolean;
        "size": RadioSize;
        "type": string;
        "value": string;
        "variant": RadioVariant;
    }
    interface DatacomTab {
        "enabled": boolean;
        "isSelected": () => Promise<boolean>;
        "label": string;
        "setSelected": (value: boolean) => Promise<void>;
    }
    interface DatacomTabgroup {
    }
}
export interface DatacomCheckboxCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDatacomCheckboxElement;
}
export interface DatacomTabCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDatacomTabElement;
}
declare global {
    interface HTMLDatacomButtonElement extends Components.DatacomButton, HTMLStencilElement {
    }
    var HTMLDatacomButtonElement: {
        prototype: HTMLDatacomButtonElement;
        new (): HTMLDatacomButtonElement;
    };
    interface HTMLDatacomCheckboxElement extends Components.DatacomCheckbox, HTMLStencilElement {
    }
    var HTMLDatacomCheckboxElement: {
        prototype: HTMLDatacomCheckboxElement;
        new (): HTMLDatacomCheckboxElement;
    };
    interface HTMLDatacomMenubarElement extends Components.DatacomMenubar, HTMLStencilElement {
    }
    var HTMLDatacomMenubarElement: {
        prototype: HTMLDatacomMenubarElement;
        new (): HTMLDatacomMenubarElement;
    };
    interface HTMLDatacomRadioElement extends Components.DatacomRadio, HTMLStencilElement {
    }
    var HTMLDatacomRadioElement: {
        prototype: HTMLDatacomRadioElement;
        new (): HTMLDatacomRadioElement;
    };
    interface HTMLDatacomTabElement extends Components.DatacomTab, HTMLStencilElement {
    }
    var HTMLDatacomTabElement: {
        prototype: HTMLDatacomTabElement;
        new (): HTMLDatacomTabElement;
    };
    interface HTMLDatacomTabgroupElement extends Components.DatacomTabgroup, HTMLStencilElement {
    }
    var HTMLDatacomTabgroupElement: {
        prototype: HTMLDatacomTabgroupElement;
        new (): HTMLDatacomTabgroupElement;
    };
    interface HTMLElementTagNameMap {
        "datacom-button": HTMLDatacomButtonElement;
        "datacom-checkbox": HTMLDatacomCheckboxElement;
        "datacom-menubar": HTMLDatacomMenubarElement;
        "datacom-radio": HTMLDatacomRadioElement;
        "datacom-tab": HTMLDatacomTabElement;
        "datacom-tabgroup": HTMLDatacomTabgroupElement;
    }
}
declare namespace LocalJSX {
    interface DatacomButton {
        "autofocus"?: boolean;
        "disabled"?: boolean;
        "form"?: string;
        "formaction"?: string;
        "formenctype"?: string;
        "formmethod"?: string;
        "formtarget"?: string;
        "icon"?: string;
        "imagePosition"?: ImagePosition;
        "loading"?: boolean;
        "name"?: string;
        "size"?: ButtonSize;
        "src"?: string;
        "text"?: string;
        "type"?: string;
        "value"?: string;
        "variant"?: ButtonVariant;
    }
    interface DatacomCheckbox {
        "checked"?: boolean;
        "label"?: string;
        "onToggle"?: (event: DatacomCheckboxCustomEvent<boolean>) => void;
    }
    interface DatacomMenubar {
    }
    interface DatacomRadio {
        "autofocus"?: boolean;
        "checked"?: boolean;
        "disabled"?: boolean;
        "label"?: string;
        "required"?: boolean;
        "size"?: RadioSize;
        "type"?: string;
        "value"?: string;
        "variant"?: RadioVariant;
    }
    interface DatacomTab {
        "enabled"?: boolean;
        "label"?: string;
        "onTabSelected"?: (event: DatacomTabCustomEvent<string>) => void;
    }
    interface DatacomTabgroup {
    }
    interface IntrinsicElements {
        "datacom-button": DatacomButton;
        "datacom-checkbox": DatacomCheckbox;
        "datacom-menubar": DatacomMenubar;
        "datacom-radio": DatacomRadio;
        "datacom-tab": DatacomTab;
        "datacom-tabgroup": DatacomTabgroup;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "datacom-button": LocalJSX.DatacomButton & JSXBase.HTMLAttributes<HTMLDatacomButtonElement>;
            "datacom-checkbox": LocalJSX.DatacomCheckbox & JSXBase.HTMLAttributes<HTMLDatacomCheckboxElement>;
            "datacom-menubar": LocalJSX.DatacomMenubar & JSXBase.HTMLAttributes<HTMLDatacomMenubarElement>;
            "datacom-radio": LocalJSX.DatacomRadio & JSXBase.HTMLAttributes<HTMLDatacomRadioElement>;
            "datacom-tab": LocalJSX.DatacomTab & JSXBase.HTMLAttributes<HTMLDatacomTabElement>;
            "datacom-tabgroup": LocalJSX.DatacomTabgroup & JSXBase.HTMLAttributes<HTMLDatacomTabgroupElement>;
        }
    }
}
